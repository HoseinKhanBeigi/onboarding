
// --------------------------------- variables

$font: (
  8: 0.8rem,
  10: 1rem,
  12: 1.2rem,
  14: 1.4rem,
  16: 1.6rem,
  18: 1.8rem,
  20: 2rem,
  22: 2.2rem,
  32: 3.2rem
);

$spacing: (
  2: 0.2rem,
  4: 0.4rem,
  8: 0.8rem,
  6: 0.6rem,
  12: 1.2rem,
  14: 1.4rem,
  16: 1.6rem,
  18: 1.8rem,
  22: 2.2rem,
  24: 2.4rem,
  28: 2.8rem,
  32: 3.2rem,
  34: 3.4rem,
  36: 3.6rem,
  48: 4.8rem,
  54: 5.4rem,
  64: 6.4rem,
  72: 7.2rem
);

$radius: (
  2: 2px,
  4: 4px,
  8: 8px,
  16: 16px,
  rounded: 50%
);

$mobile-small: 20em; //320px
$mobile-medium: 25em; //400px
$mobile-large: 30em; //480px
$tablet-small: 48em; //768px
$tablet-large: 64em; //1024px
$desktop-normal: 75em; //1200px
$desktop-large: 90em; //1440px
$desktop-xLarge: 120em; //1600px

$ant-cubic-bezier: cubic-bezier(0.645, 0.045, 0.355, 1);
$easeOutCirc: cubic-bezier(0.08, 0.82, 0.17, 1);
$easeInCirc: cubic-bezier(0.6, 0.04, 0.98, 0.34);

// --------------------------------- mixins

@mixin generate-variables($list, $prefix) {
  @each $name, $value in $list {
    --#{$prefix}-#{$name}: #{$value};
  }
}

@mixin theme-aware() {
  @each $theme-name, $theme-values in $themes {
    .theme-#{$theme-name} & {
      @include generate-variables($theme-values, 'color');
    }
  }
}

@mixin onBetween($from: null, $to: null) {
  @if ($from == null and $to == null) {
    @error 'At least one range should be defined';
  }

  @else if ($from == null) {
    @media only screen and (max-width: $to) {
      @content;
    }
  }

  @else if($to == null) {
    @media only screen and (min-width: $from) {
      @content;
    }
  }

  @else {
    @media only screen and (min-width: $from) and (max-width: $to) {
      @content;
    }
  }
}

@mixin safariOnly () {
  _::-webkit-full-page-media,
  _:future,
  :root & {
    @content;
  }
}

// --------------------------------- functions

@function color($name) {
  @return var(--color-#{$name});
}

@function font($name) {
  @return map-get($font, $name);
}

@function space($name) {
  @return map-get($spacing, $name);
}

@function radius($name) {
  @return map-get($radius, $name);
}

// --------------------------------- placeholders

%fix-Image-component {
  > div {
    position: unset !important;
  }

  img {
    object-fit: contain;
    width: 100% !important;
    position: relative !important;
    height: unset !important;
  }
}

%centralize {
  display: flex;
  justify-content: center;
  align-items: center;
}

%fullscreen {
  width: 100vw;
  height: 100vh;
}

%full-of-Parent {
  width: 100%;
  height: 100%;
}

%absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
